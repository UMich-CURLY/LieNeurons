function v = vee_sl3(M)
    v(4) = -0.5 * M(3, 3);
    v(5) = M(1, 3);
    v(6) = M(2, 3);
    v(7) = M(3, 1);
    v(8) = M(3, 2);
    v(1) = (M(1, 1) - v(4));

    v(2) = 0.5*(M(1, 2) + M(2, 1));
    v(3) = 0.5*(M(2, 1) - M(1, 2));
    
    v = v';
end

% def vee_sl3(M):
%     # [a1 + a4, a2 - a3,    a5]
%     # [a2 + a3, a4 - a1,    a6]
%     # [     a7,      a8, -2*a4]
%     v = torch.zeros(M.shape[:-2]+(8,)).to(M.device)
%     v[..., 3] = -0.5*M[..., 2, 2]
%     v[..., 4] = M[..., 0, 2]
%     v[..., 5] = M[..., 1, 2]
%     v[..., 6] = M[..., 2, 0]
%     v[..., 7] = M[..., 2, 1]
%     v[..., 0] = (M[..., 0, 0] - v[..., 3])
% 
%     v[..., 1] = 0.5*(M[..., 0, 1] + M[..., 1, 0])
%     v[..., 2] = 0.5*(M[..., 1, 0] - M[..., 0, 1])
%     return v